@page "/"

@inject MyAuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavManager

<AuthorizeView>
    <Authorized>
        <RedirectToPage PagePath="/dashboard" />
    </Authorized>

    <NotAuthorized>
        <div class="all-content">
            <div class="container">
                <header>
                    <span class="oi oi-play-circle logo" />

                    <nav class="nav-buttons">
                        <ul>
                            <li><button class="nav-btn" @onclick="OnLoginClick">login</button></li>
                            <li><button class="nav-btn" @onclick="OnSignupClick">signup</button></li>
                            <li><button class="nav-btn" @onclick="OnAboutClick">about</button></li>
                        </ul>
                    </nav>
                </header>

                <main>
                    <div class="title">
                        <h1>Word Jumble</h1>
                        <h4>words can play</h4>
                    </div>

                    <div class="content">
                        <button class="play-btn" @onclick="GoToPlayGround">play game</button>
                    </div>
                </main>

                <div class="nav-show-login">
                    @if (loginVisible)
                    {
                        <LoginDropDown LoginUser="LoginUser" CancelLogin="ToggleLogin" />
                    }
                </div>

                <div class="nav-show-signup">
                    @if (signupVisible)
                    {
                        <SignupDropDown RegisterNewUser="SignupNewUser" CancelSignup="ToggleSignup" />
                    }
                </div>

                <div class="nav-show-about">
                    @if (aboutVisible)
                    {
                        <AboutDropDown CloseAbout="ToggleAbout" />
                    }
                </div>
            </div>
        </div>

        @if (chooseDicVisible)
        {
            <ChooseDictionary OnChooseDictionary="OnChooseDictionary" />
        }

    </NotAuthorized>
</AuthorizeView>

@code {

    #region fields
    private bool loginVisible = false;
    private bool signupVisible = false;
    private bool aboutVisible = false;
    private bool chooseDicVisible = false;
    #endregion

    #region methods

    #region nav_click
    private void ToggleLogin()
    {
        ResetNav(nameof(loginVisible));
        loginVisible = loginVisible == true ? false : true;
    }

    private void ToggleSignup()
    {
        ResetNav(nameof(signupVisible));
        signupVisible = signupVisible == true ? false : true;
    }

    private void ToggleAbout()
    {
        ResetNav(nameof(aboutVisible));
        aboutVisible = aboutVisible == true ? false : true;
    }

    private void ToggleChooseDic()
    {
        chooseDicVisible = chooseDicVisible == true ? false : true;
    }

    private void ResetNav(string exception)
    {
        //resets all the nav buttons to false except exception

        if (exception == nameof(loginVisible))
        {
            signupVisible = false;
            aboutVisible = false;
        }
        else if (exception == nameof(signupVisible))
        {
            loginVisible = false;
            aboutVisible = false;
        }
        else if (exception == nameof(aboutVisible))
        {
            loginVisible = false;
            signupVisible = false;
        }
        else
        {
            loginVisible = false;
            signupVisible = false;
            aboutVisible = false;
        }
    }

    private void OnLoginClick()
    {
        ToggleLogin();
    }

    private void OnSignupClick()
    {
        ToggleSignup();
    }

    private void OnAboutClick()
    {
        ToggleAbout();
    }
    #endregion

    #region authentication
    public async Task SignupNewUser(SignupRequest signupRequest)
    {
        await AuthStateProvider.Signup(signupRequest);
        ToggleSignup();
    }

    public async Task LoginUser(LoginRequest loginRequest)
    {
        await AuthStateProvider.Login(loginRequest);
        ToggleLogin();

        NavManager.NavigateTo("/dashboard");
    }
    #endregion

    public void GoToPlayGround()
    {
        ToggleChooseDic();
        //NavManager.NavigateTo($"playground");
    }

    public void OnChooseDictionary()
    {
        ToggleChooseDic();
        NavManager.NavigateTo($"playground");
    }

    #endregion
}